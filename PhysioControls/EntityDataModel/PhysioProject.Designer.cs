//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("PhysioProject", "BaseNodeSubNode", "BaseNode", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PhysioControls.EntityDataModel.BaseNode), "SubNode", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PhysioControls.EntityDataModel.SubNode), true)]
[assembly: EdmRelationshipAttribute("PhysioProject", "PageDataObject", "Page", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PhysioControls.EntityDataModel.Page), "DataObject", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PhysioControls.EntityDataModel.DataObject), true)]
[assembly: EdmRelationshipAttribute("PhysioProject", "ProjectPage", "Project", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(PhysioControls.EntityDataModel.Project), "Page", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PhysioControls.EntityDataModel.Page), true)]

#endregion

namespace PhysioControls.EntityDataModel
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class PhysioProjectContainer : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new PhysioProjectContainer object using the connection string found in the 'PhysioProjectContainer' section of the application configuration file.
        /// </summary>
        public PhysioProjectContainer() : base("name=PhysioProjectContainer", "PhysioProjectContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PhysioProjectContainer object.
        /// </summary>
        public PhysioProjectContainer(string connectionString) : base(connectionString, "PhysioProjectContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new PhysioProjectContainer object.
        /// </summary>
        public PhysioProjectContainer(EntityConnection connection) : base(connection, "PhysioProjectContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Project> Projects
        {
            get
            {
                if ((_Projects == null))
                {
                    _Projects = base.CreateObjectSet<Project>("Projects");
                }
                return _Projects;
            }
        }
        private ObjectSet<Project> _Projects;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<DataObject> DataObjects
        {
            get
            {
                if ((_DataObjects == null))
                {
                    _DataObjects = base.CreateObjectSet<DataObject>("DataObjects");
                }
                return _DataObjects;
            }
        }
        private ObjectSet<DataObject> _DataObjects;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Projects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProjects(Project project)
        {
            base.AddObject("Projects", project);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the DataObjects EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDataObjects(DataObject dataObject)
        {
            base.AddObject("DataObjects", dataObject);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PhysioProject", Name="BaseNode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(SubNode))]
    [KnownTypeAttribute(typeof(Node))]
    public partial class BaseNode : DataObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new BaseNode object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="commentsLocation">Initial value of the CommentsLocation property.</param>
        public static BaseNode CreateBaseNode(global::System.Int32 id, Vector commentsLocation)
        {
            BaseNode baseNode = new BaseNode();
            baseNode.Id = id;
            baseNode.CommentsLocation = StructuralObject.VerifyComplexObjectIsNotNull(commentsLocation, "CommentsLocation");
            return baseNode;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Comments
        {
            get
            {
                return _Comments;
            }
            set
            {
                OnCommentsChanging(value);
                ReportPropertyChanging("Comments");
                _Comments = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Comments");
                OnCommentsChanged();
            }
        }
        private global::System.String _Comments = "";
        partial void OnCommentsChanging(global::System.String value);
        partial void OnCommentsChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Vector CommentsLocation
        {
            get
            {
                _CommentsLocation = GetValidValue(_CommentsLocation, "CommentsLocation", false, _CommentsLocationInitialized);
                _CommentsLocationInitialized = true;
                return _CommentsLocation;
            }
            set
            {
                OnCommentsLocationChanging(value);
                ReportPropertyChanging("CommentsLocation");
                _CommentsLocation = SetValidValue(_CommentsLocation, value, "CommentsLocation");
                _CommentsLocationInitialized = true;
                ReportPropertyChanged("CommentsLocation");
                OnCommentsLocationChanged();
            }
        }
        private Vector _CommentsLocation;
        private bool _CommentsLocationInitialized;
        partial void OnCommentsLocationChanging(Vector value);
        partial void OnCommentsLocationChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PhysioProject", "BaseNodeSubNode", "SubNode")]
        public EntityCollection<SubNode> SubNodes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<SubNode>("PhysioProject.BaseNodeSubNode", "SubNode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<SubNode>("PhysioProject.BaseNodeSubNode", "SubNode", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PhysioProject", Name="DataObject")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    [KnownTypeAttribute(typeof(BaseNode))]
    [KnownTypeAttribute(typeof(Page))]
    public partial class DataObject : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new DataObject object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static DataObject CreateDataObject(global::System.Int32 id)
        {
            DataObject dataObject = new DataObject();
            dataObject.Id = id;
            return dataObject;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name = "";
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PageId
        {
            get
            {
                return _PageId;
            }
            set
            {
                OnPageIdChanging(value);
                ReportPropertyChanging("PageId");
                _PageId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PageId");
                OnPageIdChanged();
            }
        }
        private Nullable<global::System.Int32> _PageId;
        partial void OnPageIdChanging(Nullable<global::System.Int32> value);
        partial void OnPageIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PhysioProject", "PageDataObject", "Page")]
        public Page Page
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Page>("PhysioProject.PageDataObject", "Page").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Page>("PhysioProject.PageDataObject", "Page").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Page> PageReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Page>("PhysioProject.PageDataObject", "Page");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Page>("PhysioProject.PageDataObject", "Page", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PhysioProject", Name="Node")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Node : BaseNode
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Node object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="commentsLocation">Initial value of the CommentsLocation property.</param>
        /// <param name="location">Initial value of the Location property.</param>
        /// <param name="size">Initial value of the Size property.</param>
        /// <param name="hasSize">Initial value of the HasSize property.</param>
        public static Node CreateNode(global::System.Int32 id, Vector commentsLocation, Vector location, Vector size, global::System.Boolean hasSize)
        {
            Node node = new Node();
            node.Id = id;
            node.CommentsLocation = StructuralObject.VerifyComplexObjectIsNotNull(commentsLocation, "CommentsLocation");
            node.Location = StructuralObject.VerifyComplexObjectIsNotNull(location, "Location");
            node.Size = StructuralObject.VerifyComplexObjectIsNotNull(size, "Size");
            node.HasSize = hasSize;
            return node;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean HasSize
        {
            get
            {
                return _HasSize;
            }
            set
            {
                OnHasSizeChanging(value);
                ReportPropertyChanging("HasSize");
                _HasSize = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("HasSize");
                OnHasSizeChanged();
            }
        }
        private global::System.Boolean _HasSize;
        partial void OnHasSizeChanging(global::System.Boolean value);
        partial void OnHasSizeChanged();

        #endregion

        #region Complex Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Vector Location
        {
            get
            {
                _Location = GetValidValue(_Location, "Location", false, _LocationInitialized);
                _LocationInitialized = true;
                return _Location;
            }
            set
            {
                OnLocationChanging(value);
                ReportPropertyChanging("Location");
                _Location = SetValidValue(_Location, value, "Location");
                _LocationInitialized = true;
                ReportPropertyChanged("Location");
                OnLocationChanged();
            }
        }
        private Vector _Location;
        private bool _LocationInitialized;
        partial void OnLocationChanging(Vector value);
        partial void OnLocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmComplexPropertyAttribute()]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Content)]
        [XmlElement(IsNullable=true)]
        [SoapElement(IsNullable=true)]
        [DataMemberAttribute()]
        public Vector Size
        {
            get
            {
                _Size = GetValidValue(_Size, "Size", false, _SizeInitialized);
                _SizeInitialized = true;
                return _Size;
            }
            set
            {
                OnSizeChanging(value);
                ReportPropertyChanging("Size");
                _Size = SetValidValue(_Size, value, "Size");
                _SizeInitialized = true;
                ReportPropertyChanged("Size");
                OnSizeChanged();
            }
        }
        private Vector _Size;
        private bool _SizeInitialized;
        partial void OnSizeChanging(Vector value);
        partial void OnSizeChanged();

        #endregion

    
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PhysioProject", Name="Page")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Page : DataObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Page object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="pageNo">Initial value of the PageNo property.</param>
        public static Page CreatePage(global::System.Int32 id, global::System.Int32 pageNo)
        {
            Page page = new Page();
            page.Id = id;
            page.PageNo = pageNo;
            return page;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProjectId
        {
            get
            {
                return _ProjectId;
            }
            set
            {
                OnProjectIdChanging(value);
                ReportPropertyChanging("ProjectId");
                _ProjectId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProjectId");
                OnProjectIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProjectId;
        partial void OnProjectIdChanging(Nullable<global::System.Int32> value);
        partial void OnProjectIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String BgImageUri
        {
            get
            {
                return _BgImageUri;
            }
            set
            {
                OnBgImageUriChanging(value);
                ReportPropertyChanging("BgImageUri");
                _BgImageUri = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("BgImageUri");
                OnBgImageUriChanged();
            }
        }
        private global::System.String _BgImageUri;
        partial void OnBgImageUriChanging(global::System.String value);
        partial void OnBgImageUriChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PageNo
        {
            get
            {
                return _PageNo;
            }
            set
            {
                OnPageNoChanging(value);
                ReportPropertyChanging("PageNo");
                _PageNo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PageNo");
                OnPageNoChanged();
            }
        }
        private global::System.Int32 _PageNo;
        partial void OnPageNoChanging(global::System.Int32 value);
        partial void OnPageNoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PhysioProject", "PageDataObject", "DataObject")]
        public EntityCollection<DataObject> DataObjects
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<DataObject>("PhysioProject.PageDataObject", "DataObject");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<DataObject>("PhysioProject.PageDataObject", "DataObject", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PhysioProject", "ProjectPage", "Project")]
        public Project Project
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("PhysioProject.ProjectPage", "Project").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("PhysioProject.ProjectPage", "Project").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Project> ProjectReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Project>("PhysioProject.ProjectPage", "Project");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Project>("PhysioProject.ProjectPage", "Project", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PhysioProject", Name="Project")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Project : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Project object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Project CreateProject(global::System.Int32 id)
        {
            Project project = new Project();
            project.Id = id;
            return project;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PhysioProject", "ProjectPage", "Page")]
        public EntityCollection<Page> Pages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Page>("PhysioProject.ProjectPage", "Page");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Page>("PhysioProject.ProjectPage", "Page", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="PhysioProject", Name="SubNode")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class SubNode : BaseNode
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new SubNode object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="commentsLocation">Initial value of the CommentsLocation property.</param>
        public static SubNode CreateSubNode(global::System.Int32 id, Vector commentsLocation)
        {
            SubNode subNode = new SubNode();
            subNode.Id = id;
            subNode.CommentsLocation = StructuralObject.VerifyComplexObjectIsNotNull(commentsLocation, "CommentsLocation");
            return subNode;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ParentId
        {
            get
            {
                return _ParentId;
            }
            set
            {
                OnParentIdChanging(value);
                ReportPropertyChanging("ParentId");
                _ParentId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ParentId");
                OnParentIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ParentId;
        partial void OnParentIdChanging(Nullable<global::System.Int32> value);
        partial void OnParentIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("PhysioProject", "BaseNodeSubNode", "BaseNode")]
        public BaseNode Parent
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseNode>("PhysioProject.BaseNodeSubNode", "BaseNode").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseNode>("PhysioProject.BaseNodeSubNode", "BaseNode").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<BaseNode> ParentReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<BaseNode>("PhysioProject.BaseNodeSubNode", "BaseNode");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<BaseNode>("PhysioProject.BaseNodeSubNode", "BaseNode", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="PhysioProject", Name="Vector")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Vector : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Vector object.
        /// </summary>
        /// <param name="x">Initial value of the X property.</param>
        /// <param name="y">Initial value of the Y property.</param>
        public static Vector CreateVector(global::System.Double x, global::System.Double y)
        {
            Vector vector = new Vector();
            vector.X = x;
            vector.Y = y;
            return vector;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double X
        {
            get
            {
                return _X;
            }
            set
            {
                OnXChanging(value);
                ReportPropertyChanging("X");
                _X = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("X");
                OnXChanged();
            }
        }
        private global::System.Double _X;
        partial void OnXChanging(global::System.Double value);
        partial void OnXChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Y
        {
            get
            {
                return _Y;
            }
            set
            {
                OnYChanging(value);
                ReportPropertyChanging("Y");
                _Y = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Y");
                OnYChanged();
            }
        }
        private global::System.Double _Y;
        partial void OnYChanging(global::System.Double value);
        partial void OnYChanged();

        #endregion

    }

    #endregion

    
}
